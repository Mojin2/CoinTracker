[{"/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/index.tsx":"1","/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/App.tsx":"2","/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/theme.ts":"3","/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/routes/Router.tsx":"4","/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/routes/Coin.tsx":"5","/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/routes/Coins.tsx":"6","/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/routes/Chart.tsx":"7","/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/routes/Price.tsx":"8","/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/api.ts":"9","/Users/mojin/Documents/CoinTracker/src/index.tsx":"10","/Users/mojin/Documents/CoinTracker/src/App.tsx":"11","/Users/mojin/Documents/CoinTracker/src/theme.ts":"12","/Users/mojin/Documents/CoinTracker/src/routes/Router.tsx":"13","/Users/mojin/Documents/CoinTracker/src/routes/Coin.tsx":"14","/Users/mojin/Documents/CoinTracker/src/routes/Coins.tsx":"15","/Users/mojin/Documents/CoinTracker/src/api.ts":"16","/Users/mojin/Documents/CoinTracker/src/routes/Chart.tsx":"17","/Users/mojin/Documents/CoinTracker/src/routes/Price.tsx":"18"},{"size":599,"mtime":1683912730277,"results":"19","hashOfConfig":"20"},{"size":3037,"mtime":1683913429057,"results":"21","hashOfConfig":"20"},{"size":281,"mtime":1683912509577,"results":"22","hashOfConfig":"20"},{"size":385,"mtime":1683791698073,"results":"23","hashOfConfig":"20"},{"size":6352,"mtime":1683913948924,"results":"24","hashOfConfig":"20"},{"size":2434,"mtime":1683913123332,"results":"25","hashOfConfig":"20"},{"size":2157,"mtime":1683915703716,"results":"26","hashOfConfig":"20"},{"size":1907,"mtime":1683914596121,"results":"27","hashOfConfig":"20"},{"size":670,"mtime":1683903421882,"results":"28","hashOfConfig":"20"},{"size":599,"mtime":1683912730277,"results":"29","hashOfConfig":"30"},{"size":3037,"mtime":1683913429057,"results":"31","hashOfConfig":"30"},{"size":281,"mtime":1683912509577,"results":"32","hashOfConfig":"30"},{"size":385,"mtime":1683791698073,"results":"33","hashOfConfig":"30"},{"size":6352,"mtime":1683913948924,"results":"34","hashOfConfig":"30"},{"size":2434,"mtime":1683913123332,"results":"35","hashOfConfig":"30"},{"size":670,"mtime":1683903421882,"results":"36","hashOfConfig":"30"},{"size":2157,"mtime":1683915703716,"results":"37","hashOfConfig":"30"},{"size":1907,"mtime":1683914596121,"results":"38","hashOfConfig":"30"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},"h1idts",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"167jm42",{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/index.tsx",["100","101","102","103"],[],"import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./theme\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nconst queryClient = new QueryClient();\n// const [themeMode, setThemeMode] = useState(\"light\");\nroot.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </React.StrictMode>\n);\n","/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/App.tsx",[],[],"/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/theme.ts",[],[],"/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/routes/Router.tsx",[],[],[],"/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/routes/Coin.tsx",["104","105"],[],"import { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport {\n  Link,\n  Route,\n  Switch,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\ninterface Params {\n  coinId: string;\n}\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\nconst Button = styled.button`\n  width: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  border: none;\n  color: ${(props) => props.theme.textColor};\n  height: 30px;\n  border-radius: 10px;\n`;\n\nfunction Coin() {\n  const { coinId } = useParams<Params>();\n  //typescript에게 useParams가 coinId를 포함하는 obj를 return할것을 정의\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  // const [info, setInfo] = useState<InfoData>();\n  // const [priceInfo, setPriceInfo] = useState<PriceData>();\n  // const [loading, setLoading] = useState(true);\n  // useEffect(() => {\n  //   (async () => {\n  //     const response = await fetch(\n  //       `https://api.coinpaprika.com/v1/coins/${coinId}`\n  //     );\n  //     const infoData = await response.json();\n  //     const priceData = await (\n  //       await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\n  //     ).json();\n  //     setInfo(infoData);\n  //     setPriceInfo(priceData);\n  //     setLoading(false);\n  //   })();\n  // }, [coinId]);\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinInfo(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinTickers(coinId)\n  );\n  const loading = infoLoading || tickersLoading;\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>{\" \"}\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>$ {tickersData?.quotes.USD.price}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/${coinId}/price`}>\n              <Price coinId={coinId} />\n            </Route>\n            <Route path={`/${coinId}/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n          <Link to=\"/\">\n            <Button>Back</Button>\n          </Link>\n        </>\n      )}\n    </Container>\n  );\n}\n\nexport default Coin;\n","/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/routes/Coins.tsx",["106","107"],[],"import { useState, useEffect } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\nconst CoinsList = styled.ul``;\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.textColor};\n  color: ${(props) => props.theme.bgColor};\n  margin-bottom: 10px;\n  border-radius: 15px;\n  a {\n    padding: 20px;\n    transition: color 0.2s ease-in;\n    display: flex;\n    align-items: center;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\ninterface CoinInterface {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\nfunction Coins() {\n  // const [coins, setCoins] = useState<CoinInterface[]>([]);\n  // const [loading, setLoading] = useState(true);\n  // useEffect(() => {\n  //   (async () => {\n  //     const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n  //     const json = await response.json();\n  //     setCoins(json.slice(0, 5));\n  //     setLoading(false);\n  //   })();\n  // }, []);\n  const { isLoading, data } = useQuery<CoinInterface[]>(\"allCoins\", fetchCoins);\n  return (\n    <Container>\n      <Helmet>\n        <title>Coins</title>\n      </Helmet>\n      <Header>\n        <Title>Coins</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 5).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{ pathname: `/${coin.id}`, state: { name: coin.name } }}\n              >\n                <Img\n                  src={`https://cryptocurrencyliveprices.com/img/${coin.id}.png`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\n\nexport default Coins;\n","/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/routes/Chart.tsx",["108"],[],"import { useQuery } from \"react-query\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexCharts from \"react-apexcharts\";\ninterface CharProps {\n  coinId: string;\n}\ninterface IHistorical {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\nfunction Chart({ coinId }: CharProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId)\n    // { refetchInterval: 10000 }\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading chart...\"\n      ) : (\n        <ApexCharts\n          type={\"candlestick\"}\n          series={[\n            {\n              name: \"Price\",\n              data:\n                data?.map((price) => ({\n                  x: price.time_close,\n                  y: [price.open, price.high, price.low, price.close],\n                })) ?? [],\n            },\n          ]}\n          options={{\n            chart: {\n              height: 500,\n              width: 500,\n              toolbar: {\n                show: false,\n              },\n              background: \"transparent\",\n            },\n            grid: { show: false },\n            stroke: {\n              curve: \"smooth\",\n              width: 5,\n            },\n            yaxis: {\n              show: false,\n            },\n            xaxis: {\n              axisBorder: { show: false },\n              labels: { show: false },\n              axisTicks: { show: false },\n              type: \"datetime\",\n              categories:\n                data?.map((price) =>\n                  new Date(Number(price.time_close) * 1000).toISOString()\n                ) ?? [],\n            },\n            // fill: {\n            //   type: \"gradient\",\n            //   gradient: { gradientToColors: [\"blue\"],stops:[0,100] },\n            // },\n            // colors: [\"red\"],\n            tooltip: {\n              y: {\n                formatter: (value) => `$ ${value.toFixed(3)}`,\n              },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Chart;\n","/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/routes/Price.tsx",["109"],[],"import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\n\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\ninterface CharProps {\n  coinId: string;\n}\nconst Wrapper = styled.div``;\nconst Detail = styled.div`\n  padding: 5px 0px;\n  text-align: center;\n  margin-bottom: 10px;\n`;\nfunction Price({ coinId }: CharProps) {\n  const { isLoading, data } = useQuery<PriceData>([\"tickers\", coinId], () =>\n    fetchCoinTickers(coinId)\n  );\n  return (\n    <div>\n      {isLoading ? (\n        \"Loading price...\"\n      ) : (\n        <Wrapper>\n          <Detail>15분전 : {data?.quotes.USD.percent_change_15m} %</Detail>\n          <Detail>30분전 : {data?.quotes.USD.percent_change_30m} %</Detail>\n          <Detail>1시간전 : {data?.quotes.USD.percent_change_1h} %</Detail>\n          <Detail>6시간전 : {data?.quotes.USD.percent_change_6h} %</Detail>\n          <Detail>12시간전 : {data?.quotes.USD.percent_change_12h} %</Detail>\n          <Detail>24시간전 : {data?.quotes.USD.percent_change_24h} %</Detail>\n        </Wrapper>\n      )}\n    </div>\n  );\n}\n\nexport default Price;\n","/Users/mojin/Documents/React_Project/nomadcoder/reactmaster-typescript/src/api.ts",["110"],[],"const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport async function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((res) => res.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((res) => res.json());\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((res) => res.json());\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 2;\n  return fetch(\n    `https://ohlcv-api.nomadcoders.workers.dev?coinId=${coinId}`\n  ).then((res) => res.json());\n}\n","/Users/mojin/Documents/CoinTracker/src/index.tsx",["111","112","113","114"],[],"/Users/mojin/Documents/CoinTracker/src/App.tsx",[],[],"/Users/mojin/Documents/CoinTracker/src/theme.ts",[],[],"/Users/mojin/Documents/CoinTracker/src/routes/Router.tsx",[],[],"/Users/mojin/Documents/CoinTracker/src/routes/Coin.tsx",["115","116"],[],"/Users/mojin/Documents/CoinTracker/src/routes/Coins.tsx",["117","118"],[],"/Users/mojin/Documents/CoinTracker/src/api.ts",["119"],[],"/Users/mojin/Documents/CoinTracker/src/routes/Chart.tsx",["120"],[],"/Users/mojin/Documents/CoinTracker/src/routes/Price.tsx",["121"],[],{"ruleId":"122","severity":1,"message":"123","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":25},{"ruleId":"122","severity":1,"message":"126","line":4,"column":10,"nodeType":"124","messageId":"125","endLine":4,"endColumn":23},{"ruleId":"122","severity":1,"message":"127","line":5,"column":10,"nodeType":"124","messageId":"125","endLine":5,"endColumn":20},{"ruleId":"122","severity":1,"message":"128","line":5,"column":22,"nodeType":"124","messageId":"125","endLine":5,"endColumn":31},{"ruleId":"122","severity":1,"message":"129","line":1,"column":10,"nodeType":"124","messageId":"125","endLine":1,"endColumn":19},{"ruleId":"122","severity":1,"message":"123","line":1,"column":21,"nodeType":"124","messageId":"125","endLine":1,"endColumn":29},{"ruleId":"122","severity":1,"message":"123","line":1,"column":10,"nodeType":"124","messageId":"125","endLine":1,"endColumn":18},{"ruleId":"122","severity":1,"message":"129","line":1,"column":20,"nodeType":"124","messageId":"125","endLine":1,"endColumn":29},{"ruleId":"122","severity":1,"message":"130","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":19},{"ruleId":"122","severity":1,"message":"131","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":23},{"ruleId":"122","severity":1,"message":"132","line":17,"column":9,"nodeType":"124","messageId":"125","endLine":17,"endColumn":18},{"ruleId":"122","severity":1,"message":"123","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":25},{"ruleId":"122","severity":1,"message":"126","line":4,"column":10,"nodeType":"124","messageId":"125","endLine":4,"endColumn":23},{"ruleId":"122","severity":1,"message":"127","line":5,"column":10,"nodeType":"124","messageId":"125","endLine":5,"endColumn":20},{"ruleId":"122","severity":1,"message":"128","line":5,"column":22,"nodeType":"124","messageId":"125","endLine":5,"endColumn":31},{"ruleId":"122","severity":1,"message":"129","line":1,"column":10,"nodeType":"124","messageId":"125","endLine":1,"endColumn":19},{"ruleId":"122","severity":1,"message":"123","line":1,"column":21,"nodeType":"124","messageId":"125","endLine":1,"endColumn":29},{"ruleId":"122","severity":1,"message":"123","line":1,"column":10,"nodeType":"124","messageId":"125","endLine":1,"endColumn":18},{"ruleId":"122","severity":1,"message":"129","line":1,"column":20,"nodeType":"124","messageId":"125","endLine":1,"endColumn":29},{"ruleId":"122","severity":1,"message":"132","line":17,"column":9,"nodeType":"124","messageId":"125","endLine":17,"endColumn":18},{"ruleId":"122","severity":1,"message":"130","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":19},{"ruleId":"122","severity":1,"message":"131","line":3,"column":10,"nodeType":"124","messageId":"125","endLine":3,"endColumn":23},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ThemeProvider' is defined but never used.","'lightTheme' is defined but never used.","'darkTheme' is defined but never used.","'useEffect' is defined but never used.","'useParams' is defined but never used.","'fetchCoinInfo' is defined but never used.","'startDate' is assigned a value but never used."]